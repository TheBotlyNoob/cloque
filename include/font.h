
// 8x8 monochrome bitmap font for rendering
// =========================================
//
// A collection of header files containing a 8x8 bitmap font.
//
// font8x8.h contains all available characters
// font8x8_basic.h contains unicode points U+0000 - U+007F
// font8x8_latin.h contains unicode points U+0000 - U+00FF
//
// Author: Daniel Hepper <daniel@hepper.net>
// License: Public Domain
//
// Encoding
// ========
// Every character in the font is encoded row-wise in 8 bytes.
//
// The least significant bit of each byte corresponds to the first pixel in a
//  row.
//
// The character 'A' (0x41 / 65) is encoded as
// { 0x0C, 0x1E, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x00}
//
//     0x0C => 0000 1100 => ..XX....
//     0X1E => 0001 1110 => .XXXX...
//     0x33 => 0011 0011 => XX..XX..
//     0x33 => 0011 0011 => XX..XX..
//     0x3F => 0011 1111 => xxxxxx..
//     0x33 => 0011 0011 => XX..XX..
//     0x33 => 0011 0011 => XX..XX..
//     0x00 => 0000 0000 => ........
//
// To access the nth pixel in a row, right-shift by n.
//
//                          . . X X . . . .
//                          | | | | | | | |
//     (0x0C >> 0) & 1 == 0-+ | | | | | | |
//     (0x0C >> 1) & 1 == 0---+ | | | | | |
//     (0x0C >> 2) & 1 == 1-----+ | | | | |
//     (0x0C >> 3) & 1 == 1-------+ | | | |
//     (0x0C >> 4) & 1 == 0---------+ | | |
//     (0x0C >> 5) & 1 == 0-----------+ | |
//     (0x0C >> 6) & 1 == 0-------------+ |
//     (0x0C >> 7) & 1 == 0---------------+
//
// Renderer
// ========
// To visualize the font, a simple renderer is included in render.c
//
//     $ gcc render.c -o render
//     $ ./render 65
//       XX
//      XXXX
//     XX  XX
//     XX  XX
//     XXXXXX
//     XX  XX
//     XX  XX
//
// Credits
// =======
// These header files are directly derived from an assembler file fetched from:
// http://dimensionalrift.homelinux.net/combuster/mos3/?p=viewsource&file=/modules/gfx/font8_8.asm
//
// Original header:
//
// ; Summary: font8_8.asm
// ; 8x8 monochrome bitmap fonts for rendering
// ;
// ; Author:
// ;     Marcel Sondaar
// ;     International Business Machines (public domain VGA fonts)
// ;
// ; License:
// ;     Public Domain
// ;

#include <stdint.h>

// 8x8 font
#define FONT_WIDTH 8
#define FONT_HEIGHT 8
// https://github.com/dhepper/font8x8
const uint8_t font[128][FONT_HEIGHT] = {
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0000 (nul)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0001
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0002
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0003
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0004
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0005
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0006
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0007
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0008
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0009
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+000A
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+000B
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+000C
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+000D
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+000E
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+000F
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0010
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0011
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0012
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0013
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0014
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0015
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0016
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0017
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0018
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0019
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+001A
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+001B
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+001C
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+001D
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+001E
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+001F
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0020 (space)
    {0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00}, // U+0021 (!)
    {0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0022 (")
    {0x36, 0x36, 0x7F, 0x36, 0x7F, 0x36, 0x36, 0x00}, // U+0023 (#)
    {0x0C, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x0C, 0x00}, // U+0024 ($)
    {0x00, 0x63, 0x33, 0x18, 0x0C, 0x66, 0x63, 0x00}, // U+0025 (%)
    {0x1C, 0x36, 0x1C, 0x6E, 0x3B, 0x33, 0x6E, 0x00}, // U+0026 (&)
    {0x06, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0027 (')
    {0x18, 0x0C, 0x06, 0x06, 0x06, 0x0C, 0x18, 0x00}, // U+0028 (()
    {0x06, 0x0C, 0x18, 0x18, 0x18, 0x0C, 0x06, 0x00}, // U+0029 ())
    {0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00}, // U+002A (*)
    {0x00, 0x0C, 0x0C, 0x3F, 0x0C, 0x0C, 0x00, 0x00}, // U+002B (+)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x06}, // U+002C (,)
    {0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00}, // U+002D (-)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00}, // U+002E (.)
    {0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00}, // U+002F (/)
    {0x3E, 0x63, 0x73, 0x7B, 0x6F, 0x67, 0x3E, 0x00}, // U+0030 (0)
    {0x0C, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x3F, 0x00}, // U+0031 (1)
    {0x1E, 0x33, 0x30, 0x1C, 0x06, 0x33, 0x3F, 0x00}, // U+0032 (2)
    {0x1E, 0x33, 0x30, 0x1C, 0x30, 0x33, 0x1E, 0x00}, // U+0033 (3)
    {0x38, 0x3C, 0x36, 0x33, 0x7F, 0x30, 0x78, 0x00}, // U+0034 (4)
    {0x3F, 0x03, 0x1F, 0x30, 0x30, 0x33, 0x1E, 0x00}, // U+0035 (5)
    {0x1C, 0x06, 0x03, 0x1F, 0x33, 0x33, 0x1E, 0x00}, // U+0036 (6)
    {0x3F, 0x33, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x00}, // U+0037 (7)
    {0x1E, 0x33, 0x33, 0x1E, 0x33, 0x33, 0x1E, 0x00}, // U+0038 (8)
    {0x1E, 0x33, 0x33, 0x3E, 0x30, 0x18, 0x0E, 0x00}, // U+0039 (9)
    {0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00}, // U+003A (:)
    {0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x06}, // U+003B (;)
    {0x18, 0x0C, 0x06, 0x03, 0x06, 0x0C, 0x18, 0x00}, // U+003C (<)
    {0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00}, // U+003D (=)
    {0x06, 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x06, 0x00}, // U+003E (>)
    {0x1E, 0x33, 0x30, 0x18, 0x0C, 0x00, 0x0C, 0x00}, // U+003F (?)
    {0x3E, 0x63, 0x7B, 0x7B, 0x7B, 0x03, 0x1E, 0x00}, // U+0040 (@)
    {0x0C, 0x1E, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x00}, // U+0041 (A)
    {0x3F, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x3F, 0x00}, // U+0042 (B)
    {0x3C, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3C, 0x00}, // U+0043 (C)
    {0x1F, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1F, 0x00}, // U+0044 (D)
    {0x7F, 0x46, 0x16, 0x1E, 0x16, 0x46, 0x7F, 0x00}, // U+0045 (E)
    {0x7F, 0x46, 0x16, 0x1E, 0x16, 0x06, 0x0F, 0x00}, // U+0046 (F)
    {0x3C, 0x66, 0x03, 0x03, 0x73, 0x66, 0x7C, 0x00}, // U+0047 (G)
    {0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x00}, // U+0048 (H)
    {0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00}, // U+0049 (I)
    {0x78, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E, 0x00}, // U+004A (J)
    {0x67, 0x66, 0x36, 0x1E, 0x36, 0x66, 0x67, 0x00}, // U+004B (K)
    {0x0F, 0x06, 0x06, 0x06, 0x46, 0x66, 0x7F, 0x00}, // U+004C (L)
    {0x63, 0x77, 0x7F, 0x7F, 0x6B, 0x63, 0x63, 0x00}, // U+004D (M)
    {0x63, 0x67, 0x6F, 0x7B, 0x73, 0x63, 0x63, 0x00}, // U+004E (N)
    {0x1C, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1C, 0x00}, // U+004F (O)
    {0x3F, 0x66, 0x66, 0x3E, 0x06, 0x06, 0x0F, 0x00}, // U+0050 (P)
    {0x1E, 0x33, 0x33, 0x33, 0x3B, 0x1E, 0x38, 0x00}, // U+0051 (Q)
    {0x3F, 0x66, 0x66, 0x3E, 0x36, 0x66, 0x67, 0x00}, // U+0052 (R)
    {0x1E, 0x33, 0x07, 0x0E, 0x38, 0x33, 0x1E, 0x00}, // U+0053 (S)
    {0x3F, 0x2D, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00}, // U+0054 (T)
    {0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0x00}, // U+0055 (U)
    {0x33, 0x33, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00}, // U+0056 (V)
    {0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x00}, // U+0057 (W)
    {0x63, 0x63, 0x36, 0x1C, 0x1C, 0x36, 0x63, 0x00}, // U+0058 (X)
    {0x33, 0x33, 0x33, 0x1E, 0x0C, 0x0C, 0x1E, 0x00}, // U+0059 (Y)
    {0x7F, 0x63, 0x31, 0x18, 0x4C, 0x66, 0x7F, 0x00}, // U+005A (Z)
    {0x1E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x1E, 0x00}, // U+005B ([)
    {0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x40, 0x00}, // U+005C (\)
    {0x1E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x00}, // U+005D (])
    {0x08, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00, 0x00}, // U+005E (^)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF}, // U+005F (_)
    {0x0C, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+0060 (`)
    {0x00, 0x00, 0x1E, 0x30, 0x3E, 0x33, 0x6E, 0x00}, // U+0061 (a)
    {0x07, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3B, 0x00}, // U+0062 (b)
    {0x00, 0x00, 0x1E, 0x33, 0x03, 0x33, 0x1E, 0x00}, // U+0063 (c)
    {0x38, 0x30, 0x30, 0x3e, 0x33, 0x33, 0x6E, 0x00}, // U+0064 (d)
    {0x00, 0x00, 0x1E, 0x33, 0x3f, 0x03, 0x1E, 0x00}, // U+0065 (e)
    {0x1C, 0x36, 0x06, 0x0f, 0x06, 0x06, 0x0F, 0x00}, // U+0066 (f)
    {0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x1F}, // U+0067 (g)
    {0x07, 0x06, 0x36, 0x6E, 0x66, 0x66, 0x67, 0x00}, // U+0068 (h)
    {0x0C, 0x00, 0x0E, 0x0C, 0x0C, 0x0C, 0x1E, 0x00}, // U+0069 (i)
    {0x30, 0x00, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E}, // U+006A (j)
    {0x07, 0x06, 0x66, 0x36, 0x1E, 0x36, 0x67, 0x00}, // U+006B (k)
    {0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00}, // U+006C (l)
    {0x00, 0x00, 0x33, 0x7F, 0x7F, 0x6B, 0x63, 0x00}, // U+006D (m)
    {0x00, 0x00, 0x1F, 0x33, 0x33, 0x33, 0x33, 0x00}, // U+006E (n)
    {0x00, 0x00, 0x1E, 0x33, 0x33, 0x33, 0x1E, 0x00}, // U+006F (o)
    {0x00, 0x00, 0x3B, 0x66, 0x66, 0x3E, 0x06, 0x0F}, // U+0070 (p)
    {0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x78}, // U+0071 (q)
    {0x00, 0x00, 0x3B, 0x6E, 0x66, 0x06, 0x0F, 0x00}, // U+0072 (r)
    {0x00, 0x00, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x00}, // U+0073 (s)
    {0x08, 0x0C, 0x3E, 0x0C, 0x0C, 0x2C, 0x18, 0x00}, // U+0074 (t)
    {0x00, 0x00, 0x33, 0x33, 0x33, 0x33, 0x6E, 0x00}, // U+0075 (u)
    {0x00, 0x00, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00}, // U+0076 (v)
    {0x00, 0x00, 0x63, 0x6B, 0x7F, 0x7F, 0x36, 0x00}, // U+0077 (w)
    {0x00, 0x00, 0x63, 0x36, 0x1C, 0x36, 0x63, 0x00}, // U+0078 (x)
    {0x00, 0x00, 0x33, 0x33, 0x33, 0x3E, 0x30, 0x1F}, // U+0079 (y)
    {0x00, 0x00, 0x3F, 0x19, 0x0C, 0x26, 0x3F, 0x00}, // U+007A (z)
    {0x38, 0x0C, 0x0C, 0x07, 0x0C, 0x0C, 0x38, 0x00}, // U+007B ({)
    {0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00}, // U+007C (|)
    {0x07, 0x0C, 0x0C, 0x38, 0x0C, 0x0C, 0x07, 0x00}, // U+007D (})
    {0x6E, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // U+007E (~)
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}  // U+007F
};

// 6x8 font
// #define FONT_WIDTH 6
// #define FONT_HEIGHT 8
//
// https://github.com/fantasticmao/font6x8
// const uint8_t font[128][FONT_WIDTH] = {
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x00
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x01
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x02
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x03
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x04
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x05
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x06
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x07
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x08
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x09
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x0A
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x0B
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x0C
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x0D
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x0E
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x0F
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x10
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x11
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x12
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x13
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x14
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x15
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x16
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x17
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x18
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x19
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x1A
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x1B
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x1C
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x1D
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x1E
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x1F
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 0x20 (space)
//     {0x00, 0x00, 0x00, 0x2F, 0x00, 0x00}, // 0x21 (!)
//     {0x00, 0x00, 0x03, 0x00, 0x03, 0x00}, // 0x22 (")
//     {0x00, 0x14, 0x3E, 0x14, 0x3E, 0x14}, // 0x23 (#)
//     {0x00, 0x04, 0x2A, 0x7F, 0x2A, 0x10}, // 0x24 ($)
//     {0x00, 0x26, 0x10, 0x08, 0x04, 0x32}, // 0x25 (%)
//     {0x00, 0x1A, 0x25, 0x29, 0x10, 0x28}, // 0x26 (&)
//     {0x00, 0x00, 0x00, 0x03, 0x00, 0x00}, // 0x27 (')
//     {0x00, 0x00, 0x3E, 0x41, 0x41, 0x00}, // 0x28 (()
//     {0x00, 0x00, 0x41, 0x41, 0x3E, 0x00}, // 0x29 ())
//     {0x00, 0x28, 0x18, 0x0E, 0x18, 0x28}, // 0x2A (*)
//     {0x00, 0x08, 0x08, 0x3E, 0x08, 0x08}, // 0x2B (+)
//     {0x00, 0x00, 0x20, 0x10, 0x00, 0x00}, // 0x2C (,)
//     {0x00, 0x08, 0x08, 0x08, 0x08, 0x08}, // 0x2D (-)
//     {0x00, 0x00, 0x00, 0x10, 0x00, 0x00}, // 0x2E (.)
//     {0x00, 0x20, 0x10, 0x08, 0x04, 0x02}, // 0x2F (/)
//     {0x00, 0x00, 0x1E, 0x21, 0x21, 0x1E}, // 0x30 (0)
//     {0x00, 0x00, 0x00, 0x22, 0x3F, 0x20}, // 0x31 (1)
//     {0x00, 0x00, 0x22, 0x31, 0x29, 0x26}, // 0x32 (2)
//     {0x00, 0x00, 0x12, 0x21, 0x25, 0x1A}, // 0x33 (3)
//     {0x00, 0x00, 0x0C, 0x0A, 0x3F, 0x08}, // 0x34 (4)
//     {0x00, 0x00, 0x17, 0x25, 0x25, 0x19}, // 0x35 (5)
//     {0x00, 0x00, 0x1C, 0x26, 0x25, 0x18}, // 0x36 (6)
//     {0x00, 0x00, 0x01, 0x39, 0x05, 0x03}, // 0x37 (7)
//     {0x00, 0x00, 0x1A, 0x25, 0x25, 0x1A}, // 0x38 (8)
//     {0x00, 0x00, 0x06, 0x09, 0x29, 0x1E}, // 0x39 (9)
//     {0x00, 0x00, 0x00, 0x14, 0x00, 0x00}, // 0x3A (:)
//     {0x00, 0x00, 0x20, 0x14, 0x00, 0x00}, // 0x3B (;)
//     {0x00, 0x00, 0x08, 0x14, 0x22, 0x00}, // 0x3C (<)
//     {0x00, 0x00, 0x14, 0x14, 0x14, 0x00}, // 0x3D (=)
//     {0x00, 0x00, 0x22, 0x14, 0x08, 0x00}, // 0x3E (>)
//     {0x00, 0x02, 0x01, 0x29, 0x06, 0x00}, // 0x3F (?)
//     {0x00, 0x1E, 0x21, 0x2D, 0x2E, 0x00}, // 0x40 (@)
//     {0x00, 0x30, 0x0C, 0x0B, 0x0C, 0x30}, // 0x41 (A)
//     {0x00, 0x00, 0x3F, 0x25, 0x25, 0x1A}, // 0x42 (B)
//     {0x00, 0x00, 0x1E, 0x21, 0x21, 0x12}, // 0x43 (C)
//     {0x00, 0x00, 0x3F, 0x21, 0x21, 0x1E}, // 0x44 (D)
//     {0x00, 0x00, 0x3F, 0x25, 0x25, 0x25}, // 0x45 (E)
//     {0x00, 0x00, 0x3F, 0x05, 0x05, 0x05}, // 0x46 (F)
//     {0x00, 0x00, 0x1E, 0x21, 0x29, 0x1A}, // 0x47 (G)
//     {0x00, 0x00, 0x3F, 0x04, 0x04, 0x3F}, // 0x48 (H)
//     {0x00, 0x00, 0x21, 0x3F, 0x21, 0x00}, // 0x49 (I)
//     {0x00, 0x18, 0x20, 0x21, 0x1F, 0x00}, // 0x4A (J)
//     {0x00, 0x00, 0x3F, 0x0C, 0x12, 0x21}, // 0x4B (K)
//     {0x00, 0x00, 0x3F, 0x20, 0x20, 0x20}, // 0x4C (L)
//     {0x00, 0x3F, 0x06, 0x08, 0x06, 0x3F}, // 0x4D (M)
//     {0x00, 0x00, 0x3F, 0x06, 0x18, 0x3F}, // 0x4E (N)
//     {0x00, 0x00, 0x1E, 0x21, 0x21, 0x1E}, // 0x4F (O)
//     {0x00, 0x00, 0x3F, 0x09, 0x09, 0x06}, // 0x50 (P)
//     {0x00, 0x1E, 0x21, 0x21, 0x5E, 0x00}, // 0x51 (Q)
//     {0x00, 0x00, 0x3F, 0x09, 0x19, 0x26}, // 0x52 (R)
//     {0x00, 0x00, 0x12, 0x25, 0x29, 0x12}, // 0x53 (S)
//     {0x00, 0x01, 0x01, 0x3F, 0x01, 0x01}, // 0x54 (T)
//     {0x00, 0x1F, 0x20, 0x20, 0x20, 0x1F}, // 0x55 (U)
//     {0x00, 0x0F, 0x10, 0x20, 0x10, 0x0F}, // 0x56 (V)
//     {0x00, 0x1F, 0x20, 0x1C, 0x20, 0x1F}, // 0x57 (W)
//     {0x00, 0x21, 0x12, 0x0C, 0x12, 0x21}, // 0x58 (X)
//     {0x00, 0x03, 0x04, 0x38, 0x04, 0x03}, // 0x59 (Y)
//     {0x00, 0x00, 0x31, 0x29, 0x25, 0x23}, // 0x5A (Z)
//     {0x00, 0x00, 0x3F, 0x21, 0x21, 0x00}, // 0x5B ([)
//     {0x00, 0x02, 0x04, 0x08, 0x10, 0x20}, // 0x5C (\)
//     {0x00, 0x00, 0x21, 0x21, 0x3F, 0x00}, // 0x5D (])
//     {0x00, 0x04, 0x02, 0x01, 0x02, 0x04}, // 0x5E (^)
//     {0x00, 0x40, 0x40, 0x40, 0x40, 0x40}, // 0x5F (_)
//     {0x00, 0x00, 0x00, 0x01, 0x02, 0x00}, // 0x60 (`)
//     {0x00, 0x18, 0x24, 0x24, 0x18, 0x20}, // 0x61 (a)
//     {0x00, 0x00, 0x3F, 0x24, 0x24, 0x18}, // 0x62 (b)
//     {0x00, 0x00, 0x18, 0x24, 0x24, 0x00}, // 0x63 (c)
//     {0x00, 0x00, 0x18, 0x24, 0x24, 0x3F}, // 0x64 (d)
//     {0x00, 0x00, 0x1C, 0x2A, 0x2A, 0x0C}, // 0x65 (e)
//     {0x00, 0x04, 0x04, 0x3E, 0x05, 0x05}, // 0x66 (f)
//     {0x00, 0x00, 0x0C, 0x52, 0x52, 0x3E}, // 0x67 (g)
//     {0x00, 0x00, 0x3F, 0x04, 0x04, 0x38}, // 0x68 (h)
//     {0x00, 0x00, 0x24, 0x3D, 0x20, 0x00}, // 0x69 (i)
//     {0x00, 0x20, 0x40, 0x44, 0x3D, 0x00}, // 0x6A (j)
//     {0x00, 0x00, 0x3F, 0x08, 0x14, 0x22}, // 0x6B (k)
//     {0x00, 0x00, 0x1F, 0x20, 0x20, 0x10}, // 0x6C (l)
//     {0x00, 0x3E, 0x04, 0x18, 0x04, 0x3E}, // 0x6D (m)
//     {0x00, 0x00, 0x3C, 0x02, 0x02, 0x3C}, // 0x6E (n)
//     {0x00, 0x00, 0x1C, 0x22, 0x22, 0x1C}, // 0x6F (o)
//     {0x00, 0x00, 0x7E, 0x12, 0x12, 0x0C}, // 0x70 (p)
//     {0x00, 0x00, 0x0C, 0x12, 0x12, 0x7E}, // 0x71 (q)
//     {0x00, 0x00, 0x04, 0x38, 0x04, 0x04}, // 0x72 (r)
//     {0x00, 0x00, 0x04, 0x2A, 0x2A, 0x10}, // 0x73 (s)
//     {0x00, 0x00, 0x04, 0x1E, 0x24, 0x10}, // 0x74 (t)
//     {0x00, 0x1C, 0x20, 0x20, 0x20, 0x1C}, // 0x75 (u)
//     {0x00, 0x0C, 0x10, 0x20, 0x10, 0x0C}, // 0x76 (v)
//     {0x00, 0x1C, 0x20, 0x18, 0x20, 0x1C}, // 0x77 (w)
//     {0x00, 0x22, 0x14, 0x08, 0x14, 0x22}, // 0x78 (x)
//     {0x00, 0x04, 0x48, 0x30, 0x08, 0x04}, // 0x79 (y)
//     {0x00, 0x00, 0x24, 0x34, 0x2C, 0x24}, // 0x7A (z)
//     {0x00, 0x08, 0x08, 0x36, 0x41, 0x41}, // 0x7B ({)
//     {0x00, 0x00, 0x00, 0x7F, 0x00, 0x00}, // 0x7C (|)
//     {0x00, 0x41, 0x41, 0x36, 0x08, 0x08}, // 0x7D (})
//     {0x00, 0x08, 0x04, 0x08, 0x10, 0x08}, // 0x7E (~)
//     {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}  // 0x7F
// };
